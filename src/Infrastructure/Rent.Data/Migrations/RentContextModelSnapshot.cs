// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rent.Data.Context;

#nullable disable

namespace Rent.Data.Migrations
{
    [DbContext(typeof(RentContext))]
    partial class RentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Rent.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("VARCHAR(60)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b67c1bfe-0d13-4f6f-a970-48888baaa032"),
                            Type = "Casa"
                        });
                });

            modelBuilder.Entity("Rent.Domain.Entities.Renting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<double>("Bookings")
                        .HasColumnType("float");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("VARCHAR(120)");

                    b.Property<bool>("Gym")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("VARCHAR(40)");

                    b.Property<bool>("Pool")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Ranting")
                        .HasColumnType("int");

                    b.Property<double>("Rooms")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Rentings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65f15545-4ed8-4881-accb-1503edd930c8"),
                            Availability = false,
                            Bookings = 0.0,
                            CreatedOn = new DateTime(2021, 11, 30, 10, 28, 26, 537, DateTimeKind.Local).AddTicks(2514),
                            Description = "Hotel Quay is a hotel in the city of Quay, in the municipality of Quay, in the province of Québec, Canada.",
                            Gym = true,
                            Name = "Hotel Quay",
                            Pool = true,
                            Price = 1000.00m,
                            Ranting = 5,
                            Rooms = 2.0
                        });
                });

            modelBuilder.Entity("Rent.Domain.Entities.Renting", b =>
                {
                    b.HasOne("Rent.Domain.Entities.Category", "Category")
                        .WithMany("Rentings")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Post_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Rent.Domain.Entities.Category", b =>
                {
                    b.Navigation("Rentings");
                });
#pragma warning restore 612, 618
        }
    }
}
